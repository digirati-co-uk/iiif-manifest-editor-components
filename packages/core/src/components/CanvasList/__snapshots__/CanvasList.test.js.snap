// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CanvasList renders the canvas list unchanged 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CanvasList
    canvases={
      Array [
        Object {
          "id": "test-canvas-1",
        },
        Object {
          "id": "test-canvas-2",
        },
      ]
    }
    invokeAction={[Function]}
    remove={[Function]}
    select={[Function]}
    selected={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        undefined,
        <ComponentFromFactory>
          <Connect(Droppable)
            direction="horizontal"
            droppableId="canvaslist"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            type="DEFAULT"
          >
            [Function]
          </Connect(Droppable)>
        </ComponentFromFactory>,
      ],
      "horizontal": true,
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(Droppable)
            direction="horizontal"
            droppableId="canvaslist"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            type="DEFAULT"
          >
            [Function]
          </Connect(Droppable)>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": [Function],
            "direction": "horizontal",
            "droppableId": "canvaslist",
            "ignoreContainerClipping": false,
            "isCombineEnabled": false,
            "isDropDisabled": false,
            "type": "DEFAULT",
          },
          "ref": null,
          "rendered": [Function],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          undefined,
          <ComponentFromFactory>
            <Connect(Droppable)
              direction="horizontal"
              droppableId="canvaslist"
              ignoreContainerClipping={false}
              isCombineEnabled={false}
              isDropDisabled={false}
              type="DEFAULT"
            >
              [Function]
            </Connect(Droppable)>
          </ComponentFromFactory>,
        ],
        "horizontal": true,
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(Droppable)
              direction="horizontal"
              droppableId="canvaslist"
              ignoreContainerClipping={false}
              isCombineEnabled={false}
              isDropDisabled={false}
              type="DEFAULT"
            >
              [Function]
            </Connect(Droppable)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
              "direction": "horizontal",
              "droppableId": "canvaslist",
              "ignoreContainerClipping": false,
              "isCombineEnabled": false,
              "isDropDisabled": false,
              "type": "DEFAULT",
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
